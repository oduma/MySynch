using System;
using System.IO;
using System.ServiceProcess;
using System.Threading;
using MySynch.Contracts.Messages;
using MySynch.Proxies.Autogenerated.Implementations;
using MySynch.Proxies.Autogenerated.Interfaces;
using NUnit.Framework;

namespace MySynch.Tests.Integration
{
    [TestFixture]
    [Category("integration")]
    [Ignore("Start the services at the specified address and after that this should run")]
    public class FullIntegrationTests
    {
        [Test]
        [Ignore(@"Requires Subscriber service to be defined on the root folder: C:\MySynch.Dest.Test.Root\ and publisher on C:\MySynch.Source.Test.Root\")]
        public void BrokerUpAndAccessible()
        {
            IBrokerProxy brokerClient = new BrokerClient();
            brokerClient.InitiateUsingServerAddress(@"http://localhost/broker");
            Assert.True(brokerClient.GetHeartbeat().Status);
        }

        [Test]
        public void DistributorDistreibuteMessage_Ok()
        {
            if (File.Exists(@"C:\MySynch.Dest.Test.Root\File1.xml"))
                File.Delete(@"C:\MySynch.Dest.Test.Root\File1.xml");
            IBrokerProxy brokerClient = new BrokerClient();
            brokerClient.InitiateUsingServerAddress(@"http://localhost/broker");
            var listAllMessagesResponse = brokerClient.ListAllMessages();
            Assert.IsNotNull(listAllMessagesResponse);
            File.Copy(@"Data\File1.xml", @"C:\MySynch.Source.Test.Root\File1.xml", true);

        }
    }
}

//This code was auto generated with a tool
//do not change this file
using System;
using System.ServiceModel;
using MySynch.Contracts;
using Sciendo.Common.WCF;
using Sciendo.Common.WCF.Clients;
using MySynch.Proxies.Autogenerated.Interfaces;
using System.ServiceModel.Description;
using System.Collections.Generic;


namespace MySynch.Proxies.Autogenerated.Implementations
{
	public class BrokerMonitorClient :BaseClient<IBrokerMonitor>,IBrokerMonitorProxy
	{
		protected override System.Collections.Generic.List<System.ServiceModel.Description.IEndpointBehavior> GetEndpointBehaviors()
        {
            return new List<IEndpointBehavior>
			{
							new SciendoAuditBehavior()
			};
        }

		public MySynch.Contracts.Messages.GetHeartbeatResponse GetHeartbeat() 
		{
		MySynch.Contracts.Messages.GetHeartbeatResponse response = new MySynch.Contracts.Messages.GetHeartbeatResponse(); 
		try
		{
		                using (new OperationContextScope((IContextChannel)Proxy))
                {
				 response =  
					Proxy.GetHeartbeat();
				}
		}
		catch (CommunicationException e)
            {
                OnCommunicationException(e);
            }
            catch (TimeoutException e)
            {
                OnTimeoutException(e);
            }
            catch (Exception e)
            {
                OnException(e);
            }

			return  response; 

		}
		public void StartMonitoring() 
		{
		 
		try
		{
		                using (new OperationContextScope((IContextChannel)Proxy))
                {
				 
					Proxy.StartMonitoring();
				}
		}
		catch (CommunicationException e)
            {
                OnCommunicationException(e);
            }
            catch (TimeoutException e)
            {
                OnTimeoutException(e);
            }
            catch (Exception e)
            {
                OnException(e);
            }

			return ; 

		}
		public MySynch.Contracts.Messages.ListAllRegistrationsResponse ListAllRegistrations() 
		{
		MySynch.Contracts.Messages.ListAllRegistrationsResponse response = new MySynch.Contracts.Messages.ListAllRegistrationsResponse(); 
		try
		{
		                using (new OperationContextScope((IContextChannel)Proxy))
                {
				 response =  
					Proxy.ListAllRegistrations();
				}
		}
		catch (CommunicationException e)
            {
                OnCommunicationException(e);
            }
            catch (TimeoutException e)
            {
                OnTimeoutException(e);
            }
            catch (Exception e)
            {
                OnException(e);
            }

			return  response; 

		}
		public MySynch.Contracts.Messages.ListAllMessagesResponse ListAllMessages() 
		{
		MySynch.Contracts.Messages.ListAllMessagesResponse response = new MySynch.Contracts.Messages.ListAllMessagesResponse(); 
		try
		{
		                using (new OperationContextScope((IContextChannel)Proxy))
                {
				 response =  
					Proxy.ListAllMessages();
				}
		}
		catch (CommunicationException e)
            {
                OnCommunicationException(e);
            }
            catch (TimeoutException e)
            {
                OnTimeoutException(e);
            }
            catch (Exception e)
            {
                OnException(e);
            }

			return  response; 

		}
	}
}
		